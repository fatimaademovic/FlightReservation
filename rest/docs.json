{
    "openapi": "3.0.0",
    "info": {
        "title": "Flight Reservation",
        "contact": {
            "name": "Fatima Ademovic",
            "email": "fatima.ademovic@stu.ibu.edu.ba"
        },
        "version": "0.2"
    },
    "servers": [
        {
            "url": "http://localhost:3000/rest",
            "description": "Development Environment"
        }
    ],
    "paths": {
        "/flights": {
            "get": {
                "tags": [
                    "Flights"
                ],
                "summary": "Get all flights",
                "responses": {
                    "200": {
                        "description": "Return all flights."
                    }
                }
            }
        },
        "/flights/{id}": {
            "get": {
                "tags": [
                    "Flights"
                ],
                "summary": "Get flight by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the flight",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Flights"
                ],
                "summary": "Delete flight by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the flight",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "flight deleted successfully"
                    }
                }
            }
        },
        "/flight": {
            "post": {
                "tags": [
                    "Flights"
                ],
                "summary": "Add a new flight",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Flight"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Flight"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/flight/{id}": {
            "put": {
                "tags": [
                    "Flights"
                ],
                "summary": "Update an existing flight",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the flight to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Flight"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Flight"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/location": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get all locations",
                "responses": {
                    "200": {
                        "description": "Return all locations."
                    }
                }
            },
            "post": {
                "tags": [
                    "Location"
                ],
                "summary": "Add a new location",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "airport": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location added successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/location/{id}": {
            "get": {
                "tags": [
                    "Location"
                ],
                "summary": "Get location by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation."
                    }
                }
            },
            "put": {
                "tags": [
                    "Location"
                ],
                "summary": "Update a location by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city": {
                                        "type": "string"
                                    },
                                    "country": {
                                        "type": "string"
                                    },
                                    "airport": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Location"
                ],
                "summary": "Delete location by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully"
                    }
                }
            }
        },
        "/ticket": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get all tickets",
                "responses": {
                    "200": {
                        "description": "Return all tickets."
                    }
                }
            },
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Add a ticket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "userID",
                                    "flightID",
                                    "seatNumber",
                                    "ticketPrice"
                                ],
                                "properties": {
                                    "userID": {
                                        "type": "integer"
                                    },
                                    "flightID": {
                                        "type": "integer"
                                    },
                                    "seatNumber": {
                                        "type": "string"
                                    },
                                    "ticketPrice": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ticket added successfully"
                    }
                }
            }
        },
        "/ticket/{id}": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get ticket by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ticket",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Edit a ticket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ticket to edit",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "userID",
                                    "flightID",
                                    "seatNumber",
                                    "ticketPrice"
                                ],
                                "properties": {
                                    "userID": {
                                        "type": "integer"
                                    },
                                    "flightID": {
                                        "type": "integer"
                                    },
                                    "seatNumber": {
                                        "type": "string"
                                    },
                                    "ticketPrice": {
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ticket edited successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Delete ticket by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ticket",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ticket deleted successfully"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Returns all users."
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "description": "Student info",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "description": "User first name",
                                        "type": "string",
                                        "example": "Fatima"
                                    },
                                    "lastName": {
                                        "description": "User last name",
                                        "type": "string",
                                        "example": "Ademovic"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "email@gmail.com"
                                    },
                                    "type": {
                                        "description": "tzpe",
                                        "type": "string",
                                        "example": "USER"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User added successfully."
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a user by ID."
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Student info",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "firstName": {
                                        "description": "User first name",
                                        "type": "string",
                                        "example": "Fatima"
                                    },
                                    "flastName": {
                                        "description": "User last name",
                                        "type": "string",
                                        "example": "Ademovic"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "email@gmail.com"
                                    },
                                    "type": {
                                        "description": "tzpe",
                                        "type": "string",
                                        "example": "USER"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User edited successfully."
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Flight": {
                "title": "Flight",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "departureLocation": {
                        "type": "string",
                        "example": "New York"
                    },
                    "arrivalLocation": {
                        "type": "string",
                        "example": "Los Angeles"
                    },
                    "departureDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-02-01"
                    },
                    "arrivalDate": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-02-02"
                    },
                    "airline": {
                        "type": "string",
                        "example": "Delta Airlines"
                    },
                    "seatCapacity": {
                        "type": "integer",
                        "example": 200
                    },
                    "wifi": {
                        "type": "boolean",
                        "example": true
                    },
                    "meals": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            }
        }
    }
}